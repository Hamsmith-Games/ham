#
# Ham Runtime
# Copyright (C) 2022 Keith Hammond
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.
#

set(Ham_VERSION @PROJECT_VERSION@)

@PACKAGE_INIT@

set_and_check(Ham_INCLUDE_DIR "@PACKAGE_CMAKE_INSTALL_INCLUDEDIR@")
set_and_check(Ham_LIBRARY_DIR "@PACKAGE_CMAKE_INSTALL_LIBDIR@")

check_required_components(Ham)

set(Ham_INCLUDE_DIRS ${Ham_INCLUDE_DIR})
set(Ham_LIBRARY_DIRS ${Ham_LIBRARY_DIR})
set(Ham_LIBRARIES ham)
set(Ham_CFLAGS @HAM_CPU_FLAGS@)

if(NOT TARGET ham-runtime)
	add_library(ham-runtime INTERFACE)
	add_library(ham::runtime ALIAS ham-runtime)

	target_compile_features(ham-runtime INTERFACE c_std_17 cxx_std_20)

	target_link_libraries(ham-runtime INTERFACE ${Ham_LIBRARIES})
	target_link_directories(ham-runtime INTERFACE ${Ham_LIBRARY_DIRS})
	target_include_directories(ham-runtime INTERFACE ${Ham_INCLUDE_DIRS})
endif()

macro(ham_add_executable TARGET)
	add_executable(${TARGET} ${ARGN})

	target_compile_features(${TARGET} PRIVATE c_std_17 cxx_std_20)
	target_link_libraries(${TARGET} PRIVATE ham::runtime)
	target_compile_options(${TARGET} PRIVATE ${Ham_CFLAGS})

	set_target_properties(
		${TARGET} PROPERTIES
		C_STANDARD 17
		C_EXTENSIONS ON
		C_VISIBILITY_PRESET hidden
		CXX_STANDARD 20
		CXX_EXTENSIONS ON
		CXX_VISIBILITY_PRESET hidden
		VISIBILITY_INLINES_HIDDEN ON
	)

	if(CMAKE_CXX_COMPILER_ID MATCHES "Clang|GNU")
		target_link_options(${TARGET} PRIVATE "-Wl,--enable-new-dtags")
	endif()
endmacro()

macro(ham_add_library TARGET)
	add_library(${TARGET} ${ARGN})

	target_compile_features(${TARGET} PRIVATE c_std_17 cxx_std_20)
	target_link_libraries(${TARGET} PRIVATE ham::runtime)
	target_compile_options(${TARGET} PRIVATE ${Ham_CFLAGS})

	set_target_properties(
		${TARGET} PROPERTIES
		C_STANDARD 17
		C_EXTENSIONS ON
		C_VISIBILITY_PRESET hidden
		CXX_STANDARD 20
		CXX_EXTENSIONS ON
		CXX_VISIBILITY_PRESET hidden
		VISIBILITY_INLINES_HIDDEN ON
	)
endmacro()
